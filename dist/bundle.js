(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"body {\n    margin: 0px;\n}\n#content {\n    display: flex;\n    flex-direction: column;\n}\n\n.form-wrapper {\n    background: rgba(0,0,0,.5);\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    position: fixed;\n}\n\n.form-container {\n    background-color: white;\n    padding: 16px;\n    margin: 20% auto;\n    max-width: 300px;\n    height: 400px;\n    text-align: center;\n    border-radius: 16px;\n\n}\n\n.form-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n    text-align: start;\n    padding: 0px, 12px, 12px;\n    margin: 0;\n    height: 385px;\n}\n\n.form-content h2 {\n    text-align: center;\n}\n\n.project-select {\n    display: flex;\n    flex-direction: column;\n}\n\n.form-buttons {\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.close {\n    position: absolute;\n    top: 0.2rem;\n    right: 1rem;\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #001f3f;\n    padding: 16px;\n    color: white;\n}\n\n.main {\n    display: flex;\n}\n\n.project-bar {\n    display: flex;\n    flex-direction: column;\n    height: 92vh;\n    width: 30%;\n    background-color: #1c5769;\n    padding: 12px;\n}\n\n.tab {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.tab button {\n    background-color: inherit;\n    float: left;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 14px 16px;\n    transition: 0.3s;\n}\n\n.tab button:hover {\n    background-color: #ddd;\n}\n\n.tab button.active {\n    background-color: #ccc;\n  }\n\n.list-body {\n    display: flex;\n    flex-direction: column;\n    height: 92vh;\n    width: 70%;\n    background-color: #0074D9    ;\n    padding: 12px;\n}\n\n.list-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.todo-container {\n    background: #DDDDDD;\n    border-radius: 6px;\n    padding: 12px;\n    margin: 6px;\n}\n\n.todo-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: black;\n}\n\n.list-buttons {\n    display: flex;\n    justify-content: space-between;\n    padding: 8px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;AACf;AACA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;IAC1B,SAAS;IACT,WAAW;IACX,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,kBAAkB;IAClB,mBAAmB;;AAEvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,0BAA0B;IAC1B,iBAAiB;IACjB,wBAAwB;IACxB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,WAAW;AACf;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,UAAU;IACV,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;EACxB;;AAEF;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,UAAU;IACV,6BAA6B;IAC7B,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,WAAW;AACf;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;AAChB",sourcesContent:["body {\n    margin: 0px;\n}\n#content {\n    display: flex;\n    flex-direction: column;\n}\n\n.form-wrapper {\n    background: rgba(0,0,0,.5);\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    position: fixed;\n}\n\n.form-container {\n    background-color: white;\n    padding: 16px;\n    margin: 20% auto;\n    max-width: 300px;\n    height: 400px;\n    text-align: center;\n    border-radius: 16px;\n\n}\n\n.form-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n    text-align: start;\n    padding: 0px, 12px, 12px;\n    margin: 0;\n    height: 385px;\n}\n\n.form-content h2 {\n    text-align: center;\n}\n\n.project-select {\n    display: flex;\n    flex-direction: column;\n}\n\n.form-buttons {\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.close {\n    position: absolute;\n    top: 0.2rem;\n    right: 1rem;\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #001f3f;\n    padding: 16px;\n    color: white;\n}\n\n.main {\n    display: flex;\n}\n\n.project-bar {\n    display: flex;\n    flex-direction: column;\n    height: 92vh;\n    width: 30%;\n    background-color: #1c5769;\n    padding: 12px;\n}\n\n.tab {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.tab button {\n    background-color: inherit;\n    float: left;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 14px 16px;\n    transition: 0.3s;\n}\n\n.tab button:hover {\n    background-color: #ddd;\n}\n\n.tab button.active {\n    background-color: #ccc;\n  }\n\n.list-body {\n    display: flex;\n    flex-direction: column;\n    height: 92vh;\n    width: 70%;\n    background-color: #0074D9    ;\n    padding: 12px;\n}\n\n.list-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.todo-container {\n    background: #DDDDDD;\n    border-radius: 6px;\n    padding: 12px;\n    margin: 6px;\n}\n\n.todo-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: black;\n}\n\n.list-buttons {\n    display: flex;\n    justify-content: space-between;\n    padding: 8px;\n}\n"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=o(e,r),l=0;l<i.length;l++){var d=t(i[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),c=t(565),s=t.n(c),l=t(216),d=t.n(l),A=t(589),p=t.n(A),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=document.querySelector("#content"),y=(e,n,...t)=>{const o=document.createElement(e);if(n)for(const e in n)o.setAttribute(e,n[e]);return t.forEach((e=>{"string"==typeof e?o.innerText=e:o.appendChild(e)})),o},b=()=>{document.getElementById("form").reset(),document.querySelector(".form-wrapper").setAttribute("style","display: none")},h=()=>{document.querySelector(".form-wrapper").setAttribute("style","display: block")};(()=>{if(document.querySelector(".form-wrapper"))return;const e=y("div",{class:"form-wrapper"},y("div",{class:"form-container"},y("form",{class:"form-content",id:"form"},y("h2",{},"New Todo"),y("label",{for:"title",name:"title",id:"title-label"},"Todo Name:"),y("input",{type:"text",name:"title",id:"title"},""),y("label",{for:"description",id:"description-label"},"Description"),y("textarea",{name:"description",id:"description",cols:"30",rows:"6"},""),y("label",{for:"priority",id:"priority-label"},"Priority:"),y("select",{name:"priority",id:"priority"},y("option",{value:"low"},"Low"),y("option",{value:"medium"},"Medium"),y("option",{value:"high"},"High")),y("label",{for:"due-date"},"Due Date:"),y("input",{type:"date",id:"due-date"},""),y("div",{class:"project-select"}),y("div",{class:"form-buttons"},y("button",{type:"button",class:"cancel-new-todo"},"Cancel"),y("input",{type:"submit",class:"submit-new-todo",value:"Submit"},"")))));f.appendChild(e)})(),(()=>{b();const e=y("div",{class:"header"},y("div",{class:"header-title"},y("h1",{},"Todos")),y("div",{class:"searchbar"},y("input",{type:"text",placeholder:"search",name:"searchbar",id:"searchbar"},""))),n=y("div",{class:"main"},y("div",{class:"project-bar"},y("h2",{class:"project-list"},"Project List",y("div",{class:"tab",name:"project-tabs"})),y("form",{class:"new-project-form",id:"new-project-form"},y("label",{for:"new-project"},"New Project:"),y("input",{type:"text",name:"new-project",id:"new-project"},""),y("button",{type:"submit",class:"new-project"},"Submit")),y("button",{type:"button",class:"delete-project"},"Delete Selected Project")),y("div",{class:"list-body"},y("div",{class:"list-header"},y("h2",{class:"project-title"},""),y("p",{class:"remaining-todos"},"")),y("div",{class:"todo-list"}),y("div",{class:"list-buttons"},y("button",{type:"button",class:"add-new-todo"},"Add New Todo"),y("button",{type:"button",class:"clear-completed"},"Clear Completed Todos"))));f.appendChild(e),f.appendChild(n)})();const g=document.getElementById("form"),C=document.getElementById("new-project-form"),B=document.querySelector(".todo-list"),x=document.querySelector(".add-new-todo"),I=document.querySelector(".clear-completed"),v=document.querySelector(".cancel-new-todo"),j=document.querySelector(".tab"),w=document.querySelector(".remaining-todos");let E,k;const S=["View All","General","Clean Car","Shopping"],D=[{project:"General",title:"Wash dog",description:"do it right",priority:"Medium",dueDate:"2022-01-01",display:!1},{project:"General",title:"Wash cat",description:"yeah right",priority:"Medium",dueDate:"2022-01-12",display:!1},{project:"Clean Car",title:"vacuum carpets",description:"shampoo?",priority:"Medium",dueDate:"2022-01-02",display:!1},{project:"Clean Car",title:"Wash back blanket",description:"wash cold, dry low heat",priority:"High",dueDate:"2022-01-03",display:!1},{project:"Shopping",title:"grocery",description:"oats and peas and beans",priority:"Medium",dueDate:"2022-01-05",display:!1},{project:"Shopping",title:"auto parts",description:"get oil",priority:"Medium",dueDate:"2022-01-05",display:!1}],T=()=>{S.forEach((e=>{const n=S.indexOf(e),t=y("button",{class:"tablinks",name:`${e}`,id:`${n}`},"");t.innerText=e,j.append(t)}))};T();const q=()=>{D.sort(((e,n)=>e.dueDate>n.dueDate?1:-1)),localStorage.setItem("todoArray",JSON.stringify(D))},L=()=>{for(D.forEach((e=>{e.display=!1}));B.firstChild;)B.removeChild(B.firstChild)},M=()=>{let e=0;if(D.forEach((n=>{const t=()=>{n.display=!0,B.appendChild(i),e++,w.innerText=`${e} remaining todos`},o=document.querySelector(".project-title").id,r=D.indexOf(n),i=y("div",{class:"todo-container"},y("div",{class:"todo-content"},y("input",{type:"checkbox",class:"checkbox",id:`${r}`},""),y("p",{class:"todo-text"},`${n.project}, ${n.title}, ${n.description}, ${n.dueDate}, ${n.priority}`),y("button",{type:"button",class:"edit",id:`${r}`},"Edit")));"View All"===o?t():n.project!==o||n.display||t()})),e=0,!0!==E&&S.length>=1){E=!0;const e=document.querySelector(".project-select");for(;e.firstChild;)e.removeChild(e.firstChild);const n=y("label",{for:"project-select"},"Select Project:"),t=y("select",{name:"project-select",id:"project-select"});e.appendChild(n),e.appendChild(t),S.forEach((e=>{const n=y("option",{value:`${e}`,id:`${e}`},`${e}`);t.appendChild(n)}))}},W=()=>{localStorage.setItem("projectArray",JSON.stringify(S))},O=()=>{const e=document.querySelectorAll(".edit");console.log(e),e.forEach((e=>{e.addEventListener("click",(e=>{D.forEach((n=>{e.target.id==D.indexOf(n)&&(h(),document.getElementById("title").value=n.title,document.getElementById("description").value=n.description,document.getElementById("priority").value=n.priority,document.getElementById("due-date").value=n.dueDate,D.splice(e.target.id,1))}))}))}))},Y=()=>{for(;j.firstChild;)j.removeChild(j.firstChild)};j.addEventListener("click",(e=>{L(),(e=>{let n;if(console.log(e),e.target.classList.contains("active"))return;e.target.classList.add("active");const t=document.querySelector(".project-title");for(t.innerText=e.target.innerText,t.id=e.target.innerText,k=document.querySelectorAll(".tablinks"),n=0;n<k.length;n++)k[n].className=k[n].className.replace(" active","")})(e),M(),O()})),I.addEventListener("click",(()=>{document.querySelectorAll(".checkbox").forEach((e=>{e.checked&&D.forEach((n=>{e.id==D.indexOf(n)&&D.splice(e.id,1)}))})),M()})),x.addEventListener("click",h),v.addEventListener("click",b),g.addEventListener("submit",(e=>{e.preventDefault(),L(),(()=>{const e={project:document.getElementById("project-select").value,title:document.getElementById("title").value,description:document.getElementById("description").value,priority:document.getElementById("priority").value,dueDate:document.getElementById("due-date").value};D.push(e),g.reset(),b()})(),q(),M(),O()})),C.addEventListener("submit",(e=>{e.preventDefault(),E=!1,(()=>{const e=document.getElementById("new-project").value;S.push(e),C.reset()})(),W(),Y(),T()})),document.querySelector(".delete-project").addEventListener("click",(()=>{k.forEach((e=>{e.classList.contains("active")&&D.forEach((n=>{e.innerText===n.project&&D.splice(D.indexOf(n),1)}))})),k=document.querySelectorAll(".tablinks"),k.forEach((e=>{e.classList.contains("active")&&S.forEach((n=>{e.id==S.indexOf(n)&&S.splice(S.indexOf(n),1)}))})),Y(),W(),T(),q(),M()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,